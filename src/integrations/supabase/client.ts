// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rrlmiapghsswywyxayhd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJybG1pYXBnaHNzd3l3eXhheWhkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTczNDMzNjQsImV4cCI6MjA3MjkxOTM2NH0.dU5Xucu2pYpRXn0WtiKinQ0E3o_hZg3-80uYQvZ1vB8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Safe storage wrapper with fallback
const createSafeStorage = () => {
  try {
    // Test localStorage availability
    localStorage.setItem('__test__', 'test');
    localStorage.removeItem('__test__');
    return localStorage;
  } catch {
    // Fallback to memory storage if localStorage is unavailable
    const memoryStorage = new Map<string, string>();
    return {
      getItem: (key: string) => memoryStorage.get(key) || null,
      setItem: (key: string, value: string) => { memoryStorage.set(key, value); },
      removeItem: (key: string) => { memoryStorage.delete(key); },
    };
  }
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: createSafeStorage(),
    persistSession: true,
    autoRefreshToken: true,
  }
});